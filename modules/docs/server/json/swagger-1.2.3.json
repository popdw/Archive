{
    "swagger": "2.0",
    "info": {
        "title": "WAM Left Shark (Consumer Portal) API Documentation",
        "description": "Integrate with Left Shark (Consumer Portal) using the API",
        "version": "1.2.0"
    },
    "host": "localhost:3000",
    "schemes": [
        "http"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/api/categories/list/": {
            "get": {
                "summary": "Categories - List",
                "description": "Returns the collection of Episodes of Care Categories the Episodes of Care can be\nsearched by. These currently include \"Medical or Surgical Procedure\",\n\"Specialist Visit\", \"Imaging Exam\", and \"Lab Test\".\n",
                "tags": [
                    "API - COC Search"
                ],
                "responses": {
                    "200": {
                        "description": "An array of Episode of Care Categories",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EpisodeOfCareCategory"
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequestError"
                    },
                    "404": {
                        "$ref": "#/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/responses/GeneralError"
                    }
                }
            }
        },
        "/api/specialties/list/": {
            "get": {
                "summary": "Specialties - List",
                "description": "Returns the collection of Specialties the Episodes of Care can be\nperformed by. These include \"Cardiologist\", \"Physiatrist\",\n\"Radiologist\", etc.\n",
                "tags": [
                    "API - COC Search"
                ],
                "responses": {
                    "200": {
                        "description": "An array of Specialties.\n",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Specialty"
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequestError"
                    },
                    "404": {
                        "$ref": "#/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/responses/GeneralError"
                    }
                }
            }
        },
        "/api/episodes_of_care/search/": {
            "get": {
                "summary": "Episode Of Care - Search",
                "description": "Returns a collection of relevant Episodes of Care matching a specified query.\n",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "A UTF-8, URL-encoded search query of 500 characters maximum, \nincluding operators.\n",
                        "required": true,
                        "type": "string",
                        "format": "utf-8"
                    },
                    {
                        "name": "eoc_category_id",
                        "in": "query",
                        "description": "Returns Episodes of Care associated with the specified \neoc_category_id.\n",
                        "required": true,
                        "type": "string",
                        "format": "utf-8"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "The number of Episodes of Care to return per page, up to a maximum \nof 100. Defaults to 5.\n",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 5,
                        "minimum": 1,
                        "maximum": 100
                    }
                ],
                "tags": [
                    "API - COC Search"
                ],
                "responses": {
                    "200": {
                        "description": "An array of Episodes of Care",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EpisodeOfCare"
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequestError"
                    },
                    "404": {
                        "$ref": "#/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/responses/GeneralError"
                    }
                }
            }
        },
        "/api/episodes_of_care/show/{eoc_code}/": {
            "get": {
                "summary": "Episode Of Care  - Show",
                "description": "Returns a single Episode of Care, specified by the eoc_code parameter.\n",
                "parameters": [
                    {
                        "name": "eoc_code",
                        "in": "path",
                        "description": "The unique identifier of the Episode of Care.\n",
                        "required": true,
                        "type": "string",
                        "format": "rfc3986"
                    }
                ],
                "tags": [
                    "API - COC Search"
                ],
                "responses": {
                    "200": {
                        "description": "An array of Episodes of Care",
                        "schema": {
                            "$ref": "#/definitions/EpisodeOfCare"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequestError"
                    },
                    "404": {
                        "$ref": "#/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/responses/GeneralError"
                    }
                }
            }
        },
        "/api/location/search/": {
            "get": {
                "summary": "Location - Search",
                "description": "Returns a collection of Locations matching a specified query.\n",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "A UTF-8, URL-encoded search query of 500 characters maximum, \nincluding operators.\n",
                        "required": true,
                        "type": "string",
                        "format": "utf-8"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "The number of Locations to return per page, up to a maximum \nof 100. Defaults to 5.\n",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 5,
                        "minimum": 1,
                        "maximum": 100
                    }
                ],
                "tags": [
                    "API - Location"
                ],
                "responses": {
                    "200": {
                        "description": "An array of Locations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Location"
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequestError"
                    },
                    "404": {
                        "$ref": "#/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/responses/GeneralError"
                    }
                }
            }
        },
        "/api/location/reverse_geocode/": {
            "get": {
                "summary": "Location - Reverse Geocode",
                "description": "Returns the closest Location to the specified latitude and longitude.\n",
                "parameters": [
                    {
                        "name": "lat",
                        "in": "query",
                        "description": "The latitude to search around. This parameter will be rejected unless\nit is inside the range -90.0 to +90.0 (North is positive) inclusive.\n",
                        "required": true,
                        "type": "number",
                        "format": "float"
                    },
                    {
                        "name": "lng",
                        "in": "query",
                        "description": "The longitude to search around. This parameter will be rejected unless\nit is inside the range -180.0 to +180.0 (East is positive) inclusive.\n",
                        "required": true,
                        "type": "number",
                        "format": "float"
                    }
                ],
                "tags": [
                    "API - Location"
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the closest Location",
                        "schema": {
                            "$ref": "#/definitions/Location"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequestError"
                    },
                    "404": {
                        "$ref": "#/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/responses/GeneralError"
                    }
                }
            }
        },
        "/api/provider/search/": {
            "get": {
                "summary": "Provider - Search",
                "description": "Returns a collection of Place of Services and Practitioners matching a \nspecified query and Episode of Care.\n",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "A UTF-8, URL-encoded search query of 500 characters maximum, \nincluding operators.\n",
                        "required": true,
                        "type": "string",
                        "format": "utf-8"
                    },
                    {
                        "name": "eoc_code",
                        "in": "query",
                        "description": "The unique identifier of the Episode of Care.\n",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "The number of providers to return per page, up to a maximum \nof 100. Defaults to 10.\n",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 10,
                        "minimum": 2,
                        "maximum": 100
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "description": "The latitude to search around. This parameter will be rejected unless\nit is inside the range -90.0 to +90.0 (North is positive) inclusive.\n",
                        "required": false,
                        "type": "number",
                        "format": "float"
                    },
                    {
                        "name": "lng",
                        "in": "query",
                        "description": "The longitude to search around. This parameter will be rejected unless\nit is inside the range -180.0 to +180.0 (East is positive) inclusive.\n",
                        "required": false,
                        "type": "number",
                        "format": "float"
                    }
                ],
                "tags": [
                    "API - Provider"
                ],
                "responses": {
                    "200": {
                        "description": "An object of Places of Service and Practitioners",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "places_of_service": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PlaceOfService"
                                    }
                                },
                                "practitioners": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Practitioner"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequestError"
                    },
                    "404": {
                        "$ref": "#/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/responses/GeneralError"
                    }
                }
            }
        },
        "/api/place_of_care/search/": {
            "get": {
                "summary": "Place of Care - Search",
                "description": "Returns a collection of relevant Places of Care matching \na specified Episode of Care and geography.\n",
                "parameters": [
                    {
                        "name": "eoc_code",
                        "in": "query",
                        "description": "The unique identifier of the Episode of Care.\n",
                        "required": true,
                        "type": "string",
                        "format": "rfc3986"
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "description": "The latitude to search around. This parameter will be rejected unless\nit is inside the range -90.0 to +90.0 (North is positive) inclusive.\n",
                        "required": true,
                        "type": "number",
                        "format": "float"
                    },
                    {
                        "name": "lng",
                        "in": "query",
                        "description": "The longitude to search around. This parameter will be rejected unless\nit is inside the range -180.0 to +180.0 (East is positive) inclusive.\n",
                        "required": true,
                        "type": "number",
                        "format": "float"
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": "The radius in miles to search around. Defaults to 5.\n",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 5,
                        "minimum": 0,
                        "maximum": 2800
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "The number of results to return per page, up to a maximum \nof 600. Defaults to 40.\n",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 40,
                        "minimum": 1,
                        "maximum": 600
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Specifies the page of results to retrieve.\n",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 1,
                        "minimum": 1,
                        "maximum": 200
                    },
                    {
                        "name": "place_of_service_id",
                        "in": "query",
                        "description": "The unique identifier of the Place of Service used to highlight a\npreferred Place of Service.\n",
                        "required": false,
                        "type": "string",
                        "format": "rfc3986"
                    },
                    {
                        "name": "practitioner_id",
                        "in": "query",
                        "description": "The unique identifier of the Practitioner used to highlight a\npreferred Practitioner.\n",
                        "required": false,
                        "type": "string",
                        "format": "rfc3986"
                    }
                ],
                "tags": [
                    "API - Place of Care"
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the collection of Places of Care \nand Search Metadata for pagination.\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "places_of_care": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PlaceOfCareWithDistance"
                                    }
                                },
                                "search_metadata": {
                                    "$ref": "#/definitions/SearchMetadata"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequestError"
                    },
                    "404": {
                        "$ref": "#/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/responses/GeneralError"
                    }
                }
            }
        },
        "/api/place_of_care/find_lower_rates/": {
            "get": {
                "summary": "Place of Care - Find Lower Rates",
                "description": "Returns a radius to to perform a subsequest search by which will\ndisplay rates with the target price.\n",
                "parameters": [
                    {
                        "name": "eoc_code",
                        "in": "query",
                        "description": "The unique identifier of the Episode of Care.\n",
                        "required": true,
                        "type": "string",
                        "format": "rfc3986"
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "description": "The latitude to search around. This parameter will be rejected unless\nit is inside the range -90.0 to +90.0 (North is positive) inclusive.\n",
                        "required": true,
                        "type": "number",
                        "format": "float"
                    },
                    {
                        "name": "lng",
                        "in": "query",
                        "description": "The longitude to search around. This parameter will be rejected unless\nit is inside the range -180.0 to +180.0 (East is positive) inclusive.\n",
                        "required": true,
                        "type": "number",
                        "format": "float"
                    },
                    {
                        "name": "target_price",
                        "in": "query",
                        "description": "The target price for the next search query. Frontend applications\nwill submit the lowest price * 0.8 to implement the current\nUX.\n",
                        "required": true,
                        "type": "number",
                        "format": "float"
                    }
                ],
                "tags": [
                    "API - Place of Care"
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the radius to perform a subsequest search by \nwhich will display rates with the target price.\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "radius": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequestError"
                    },
                    "404": {
                        "$ref": "#/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/responses/GeneralError"
                    }
                }
            }
        },
        "/api/place_of_care/show/{place_of_service_id}/{eoc_code}/": {
            "get": {
                "summary": "Place of Care Detail",
                "description": "Returns the Place of Care Detail specified by the eoc_code \nand place_of_service_id parameters.\n",
                "parameters": [
                    {
                        "name": "eoc_code",
                        "in": "path",
                        "description": "The unique identifier of the Episode of Care.\n",
                        "required": true,
                        "type": "string",
                        "format": "rfc3986"
                    },
                    {
                        "name": "place_of_service_id",
                        "in": "path",
                        "description": "The unique identifier of the Place of Service.\n",
                        "required": true,
                        "type": "string",
                        "format": "rfc3986"
                    }
                ],
                "tags": [
                    "API - Place of Care"
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the Place of Care Detail\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "place_of_care": {
                                    "$ref": "#/definitions/PlaceOfCareDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequestError"
                    },
                    "404": {
                        "$ref": "#/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/responses/GeneralError"
                    }
                }
            }
        },
        "/api/practitioner_of_care/search/": {
            "get": {
                "summary": "Practitioner of Care - Search",
                "description": "Returns the collection of Practitioners of Care specified by the\neoc_code and place_of_service_id parameters.\n",
                "parameters": [
                    {
                        "name": "eoc_code",
                        "in": "query",
                        "description": "The unique identifier of the Episode of Care.\n",
                        "required": true,
                        "type": "string",
                        "format": "rfc3986"
                    },
                    {
                        "name": "place_of_service_id",
                        "in": "query",
                        "description": "The unique identifier of the Place of Service.\n",
                        "required": true,
                        "type": "string",
                        "format": "rfc3986"
                    }
                ],
                "tags": [
                    "API - Practitioner of Care"
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the collection of Practitioners of Care \nand Search Metadata for pagination.\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "practitioners_of_care": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PractitionerOfCare"
                                    }
                                },
                                "search_metadata": {
                                    "$ref": "#/definitions/SearchMetadata"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequestError"
                    },
                    "404": {
                        "$ref": "#/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/responses/GeneralError"
                    }
                }
            }
        },
        "/api/practitioner_of_care/show/{practitioner_id}/{place_of_service_id}/{eoc_code}/": {
            "get": {
                "summary": "Practitioner of Care - Show",
                "description": "Returns the Practitioner of Care specified by the eoc_code \nand practitioner_id parameters.\n",
                "parameters": [
                    {
                        "name": "eoc_code",
                        "in": "path",
                        "description": "The unique identifier of the Episode of Care.\n",
                        "required": true,
                        "type": "string",
                        "format": "rfc3986"
                    },
                    {
                        "name": "place_of_service_id",
                        "in": "path",
                        "description": "The unique identifier of the Place_Of_Service.\n",
                        "required": true,
                        "type": "string",
                        "format": "rfc3986"
                    },
                    {
                        "name": "practitioner_id",
                        "in": "path",
                        "description": "The unique identifier of the Practitioner.\n",
                        "required": true,
                        "type": "string",
                        "format": "rfc3986"
                    }
                ],
                "tags": [
                    "API - Practitioner of Care"
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the Practitioner of Care\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "practitioner_of_care": {
                                    "$ref": "#/definitions/PractitionerOfCare"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequestError"
                    },
                    "404": {
                        "$ref": "#/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/responses/GeneralError"
                    }
                }
            }
        },
        "/api/cost_of_care/show/{eoc_code}/{place_of_service_id}/{practitioner_id}/": {
            "get": {
                "summary": "Cost of Care - Detail",
                "description": "Returns a Episode of Care, Cost of Care, Place of Care, and \n\nPractitioner of Care specified by the eoc_code, place_of_service_id,\nand \n\npractitioner_id parameters.\n",
                "parameters": [
                    {
                        "name": "eoc_code",
                        "in": "path",
                        "description": "The unique identifier of the Episode of Care.\n",
                        "required": true,
                        "type": "string",
                        "format": "rfc3986"
                    },
                    {
                        "name": "place_of_service_id",
                        "in": "path",
                        "description": "The unique identifier of the Place of Service.\n",
                        "required": true,
                        "type": "string",
                        "format": "rfc3986"
                    },
                    {
                        "name": "practitioner_id",
                        "in": "path",
                        "description": "The unique identifier of the Practitioner\n",
                        "required": true,
                        "type": "string",
                        "format": "rfc3986"
                    }
                ],
                "tags": [
                    "API - Cost of Care"
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the Episode of Care, Cost of Care, Place of \nService, and Practitioner information.\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "episode_of_care": {
                                    "$ref": "#/definitions/EpisodeOfCare"
                                },
                                "cost_of_care": {
                                    "$ref": "#/definitions/CostOfCare"
                                },
                                "place_of_care": {
                                    "$ref": "#/definitions/PlaceOfCareDetail"
                                },
                                "practitioner_of_care": {
                                    "$ref": "#/definitions/PractitionerOfCare"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequestError"
                    },
                    "404": {
                        "$ref": "#/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/responses/GeneralError"
                    }
                }
            }
        },
        "/api/questions/search/": {
            "get": {
                "summary": "Cost of Care - Questions to Ask",
                "description": "Returns an array of Questions to Ask specified by the eoc_code, \nplace_of_service_id, and practitioner_id parameters.\n",
                "parameters": [
                    {
                        "name": "eoc_code",
                        "in": "query",
                        "description": "The unique identifier of the Episode of Care.\n",
                        "required": true,
                        "type": "string",
                        "format": "rfc3986"
                    },
                    {
                        "name": "place_of_service_id",
                        "in": "query",
                        "description": "The unique identifier of the Place of Service.\n",
                        "required": false,
                        "type": "string",
                        "format": "rfc3986"
                    },
                    {
                        "name": "practitioner_id",
                        "in": "query",
                        "description": "The unique identifier of the Practitioner\n",
                        "required": false,
                        "type": "string",
                        "format": "rfc3986"
                    }
                ],
                "tags": [
                    "API - Questions"
                ],
                "responses": {
                    "200": {
                        "description": "An array of Questions to Ask the Provider.\n",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/QuestionsToAsk"
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequestError"
                    },
                    "404": {
                        "$ref": "#/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/responses/GeneralError"
                    }
                }
            }
        },
        "/api/saved_care/create/{session_key}/{eoc_code}/{place_of_service_id}/{practitioner_id}": {
            "post": {
                "summary": "Saved Care - Create",
                "description": "Saves the Saved Care specified by the session_key, eoc_code, \nplace_of_service_id, and practitioner_id parameters.\n",
                "parameters": [
                    {
                        "name": "session_key",
                        "in": "path",
                        "description": "The unique identifier of the Users Session.\n",
                        "required": true,
                        "type": "string",
                        "format": "rfc3986"
                    },
                    {
                        "name": "eoc_code",
                        "in": "path",
                        "description": "The unique identifier of the Episode of Care.\n",
                        "required": true,
                        "type": "string",
                        "format": "rfc3986"
                    },
                    {
                        "name": "place_of_service_id",
                        "in": "path",
                        "description": "The unique identifier of the Place of Service.\n",
                        "required": true,
                        "type": "string",
                        "format": "rfc3986"
                    },
                    {
                        "name": "practitioner_id",
                        "in": "path",
                        "description": "The unique identifier of the Practitioner\n",
                        "required": true,
                        "type": "string",
                        "format": "rfc3986"
                    }
                ],
                "tags": [
                    "API - Saved Care"
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequestError"
                    },
                    "404": {
                        "$ref": "#/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/responses/GeneralError"
                    }
                }
            }
        },
        "/api/saved_care/destroy/{session_key}/{eoc_code}/{place_of_service_id}/{practitioner_id}": {
            "delete": {
                "summary": "Saved Care - Delete",
                "description": "Deletes the Saved Care specified by the eoc_code, place_of_service_id, \nand practitioner_id parameters.\n",
                "parameters": [
                    {
                        "name": "session_key",
                        "in": "path",
                        "description": "The unique identifier of the Users Session.\n",
                        "required": true,
                        "type": "string",
                        "format": "rfc3986"
                    },
                    {
                        "name": "eoc_code",
                        "in": "path",
                        "description": "The unique identifier of the Episode of Care.\n",
                        "required": true,
                        "type": "string",
                        "format": "rfc3986"
                    },
                    {
                        "name": "place_of_service_id",
                        "in": "path",
                        "description": "The unique identifier of the Place of Service.\n",
                        "required": true,
                        "type": "string",
                        "format": "rfc3986"
                    },
                    {
                        "name": "practitioner_id",
                        "in": "path",
                        "description": "The unique identifier of the Practitioner\n",
                        "required": true,
                        "type": "string",
                        "format": "rfc3986"
                    }
                ],
                "tags": [
                    "API - Saved Care"
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "$ref": "#/definitions/Success"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequestError"
                    },
                    "404": {
                        "$ref": "#/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/responses/GeneralError"
                    }
                }
            }
        },
        "/api/saved_care/list/{session_key}": {
            "get": {
                "summary": "Saved Care - List",
                "description": "Returns the collection of Saved Care - List\n",
                "parameters": [
                    {
                        "name": "session_key",
                        "in": "path",
                        "description": "The unique identifier of the Users Session.\n",
                        "required": true,
                        "type": "string",
                        "format": "rfc3986"
                    }
                ],
                "tags": [
                    "API - Saved Care"
                ],
                "responses": {
                    "200": {
                        "description": "An array containing the Episode of Care and associated Cost of Care - \nDetails.\n",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "episode_of_care": {
                                        "$ref": "#/definitions/EpisodeOfCare"
                                    },
                                    "cost_of_care": {
                                        "$ref": "#/definitions/CostOfCare"
                                    },
                                    "place_of_care": {
                                        "$ref": "#/definitions/PlaceOfCareDetail"
                                    },
                                    "practitioner_of_care": {
                                        "$ref": "#/definitions/PractitionerOfCare"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequestError"
                    },
                    "404": {
                        "$ref": "#/responses/NotFoundError"
                    },
                    "500": {
                        "$ref": "#/responses/GeneralError"
                    }
                }
            }
        }
    },
    "definitions": {
        "EpisodeOfCare": {
            "type": "object",
            "properties": {
                "eoc_code": {
                    "type": "string",
                    "description": "Unique identifier representing a specific Episode of Care."
                },
                "eoc_title": {
                    "type": "string",
                    "description": "Title of Episode of Care."
                },
                "eoc_description": {
                    "type": "string",
                    "description": "Description of Episode of Care."
                },
                "eoc_keywords": {
                    "type": "string",
                    "description": "Keywords for Episode of Care."
                }
            }
        },
        "QuestionsToAsk": {
            "type": "object",
            "properties": {
                "question_text": {
                    "type": "string",
                    "description": "Text of Question."
                },
                "reason": {
                    "type": "string",
                    "description": "Reason of Question."
                }
            }
        },
        "EpisodeOfCareCategory": {
            "type": "object",
            "properties": {
                "eoc_category_id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific Episode of Care Category."
                },
                "eoc_category_name": {
                    "type": "string",
                    "description": "Name of Episode of Care Category."
                },
                "eoc_category_description": {
                    "type": "string",
                    "description": "Description of Episode of Care Category."
                }
            }
        },
        "Specialty": {
            "type": "object",
            "properties": {
                "specialty_id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific Specialty."
                },
                "specialty_name": {
                    "type": "string",
                    "description": "Name of Specialty."
                },
                "specialty_description": {
                    "type": "string",
                    "description": "Description of Specialty."
                }
            }
        },
        "PlaceOfService": {
            "type": "object",
            "properties": {
                "place_of_service_id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific Place of Service."
                },
                "place_of_service_name": {
                    "type": "string",
                    "description": "Name of Place of Service."
                },
                "place_of_service_address": {
                    "type": "object",
                    "description": "Address of Place of Service.",
                    "properties": {
                        "address_line_1": {
                            "type": "string",
                            "description": "Address line one of Place of Service."
                        },
                        "address_line_2": {
                            "type": "string",
                            "description": "Address line two of Place of Service."
                        },
                        "city": {
                            "type": "string",
                            "description": "City of the Place of Service."
                        },
                        "state": {
                            "type": "string",
                            "description": "State of the Place of Service."
                        },
                        "zip": {
                            "type": "string",
                            "description": "Zip of the Place of Service."
                        }
                    }
                },
                "place_of_service_phone": {
                    "type": "string",
                    "description": "Phone number of Place of Service."
                },
                "place_of_service_type": {
                    "type": "string",
                    "description": "Type of Place of Service."
                },
                "place_of_service_website": {
                    "type": "string",
                    "description": "Website of Place of Service."
                },
                "place_of_service_lat": {
                    "type": "number",
                    "description": "Latitude component of Place of Service."
                },
                "place_of_service_lng": {
                    "type": "number",
                    "description": "Longitude component of Place of Service."
                },
                "place_of_service_category": {
                    "type": "string",
                    "description": "Category of Place of Service.\nIN - In Network\nCC - Correct Charges\nCC - Correct Charges\n",
                    "enum": [
                        "IN",
                        "CC",
                        "PR"
                    ]
                }
            }
        },
        "Practitioner": {
            "type": "object",
            "properties": {
                "practitioner_id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific Practitioner."
                },
                "practitioner_first_name": {
                    "type": "string",
                    "description": "First name of Practitioner."
                },
                "practitioner_last_name": {
                    "type": "string",
                    "description": "Last name of Practitioner."
                },
                "practitioner_display_name": {
                    "type": "string",
                    "description": "Display name of Practitioner."
                },
                "practitioner_specialty": {
                    "type": "string",
                    "description": "Specialty of Practitioner."
                },
                "practitioner_phone": {
                    "type": "string",
                    "description": "Phone number of Practitioner."
                },
                "practitioner_category": {
                    "type": "string",
                    "description": "Category of Practitioner.\nIN - In Network\nCC - Correct Charges\nCC - Correct Charges\n",
                    "enum": [
                        "IN",
                        "CC",
                        "PR"
                    ]
                }
            }
        },
        "PlaceOfCare": {
            "allOf": [
                {
                    "$ref": "#/definitions/PlaceOfService"
                },
                {
                    "properties": {
                        "place_of_service_lowest_cost": {
                            "type": "string",
                            "description": "Lowest cost available at Place of Service for the\nspecified Episode of Care.\n"
                        },
                        "place_of_service_practitioner_count": {
                            "type": "integer",
                            "description": "Integer number of Practitioners who perform the\nspecified Episode of Care\n"
                        },
                        "place_of_service_preferred": {
                            "type": "boolean",
                            "description": "Boolean to indicate whether this Place of Serice or its Practitioners\nwere preferred by the User.\n"
                        }
                    }
                }
            ]
        },
        "PlaceOfAffiliatedCare": {
            "allOf": [
                {
                    "$ref": "#/definitions/PlaceOfService"
                },
                {
                    "properties": {
                        "place_of_service_cost": {
                            "type": "string",
                            "description": "Lowest cost available at Place of Service for the\nspecified Episode of Care.\n"
                        }
                    }
                }
            ]
        },
        "PlaceOfCareWithDistance": {
            "allOf": [
                {
                    "$ref": "#/definitions/PlaceOfCare"
                },
                {
                    "properties": {
                        "place_of_service_distance": {
                            "type": "string",
                            "description": "Distance of the Place of Service from the queried lat and lng.\n"
                        }
                    }
                }
            ]
        },
        "PlaceOfCareDetail": {
            "allOf": [
                {
                    "$ref": "#/definitions/PlaceOfCare"
                },
                {
                    "properties": {
                        "place_of_service_quality_data": {
                            "$ref": "#/definitions/PlaceOfServiceQualityData"
                        },
                        "place_of_service_cost_comparison": {
                            "$ref": "#/definitions/CostComparison"
                        }
                    }
                }
            ]
        },
        "PractitionerOfCare": {
            "allOf": [
                {
                    "$ref": "#/definitions/Practitioner"
                },
                {
                    "properties": {
                        "practitioner_total_cost": {
                            "type": "number",
                            "description": "Total Cost of Care for this Practitioner.\n"
                        },
                        "practitioner_cost": {
                            "type": "number",
                            "description": "Rate of Cost of Care for this Practitioner.\n"
                        },
                        "practiticoner_eoc_count": {
                            "type": "string",
                            "description": "Text describing the number of time this Practitioner has performed\nthe specificed Episode of Care.\n"
                        },
                        "practiticoner_quality_data": {
                            "$ref": "#/definitions/PlaceOfServiceQualityData"
                        },
                        "practiticoner_cost_comparison": {
                            "$ref": "#/definitions/CostComparison"
                        },
                        "practiticoner_places_of_service": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PlaceOfAffiliatedCare"
                            }
                        }
                    }
                }
            ]
        },
        "CostOfCare": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "Display name of cost."
                },
                "cost": {
                    "type": "number",
                    "description": "Total cost of care."
                },
                "cost_breakdown": {
                    "type": "object",
                    "properties": {
                        "title": {
                            "type": "string",
                            "description": "Display name of cost."
                        },
                        "charges_cost": {
                            "type": "number",
                            "description": "Charges cost of line item."
                        },
                        "medicare_cost": {
                            "type": "number",
                            "description": "Medicare cost of line item."
                        }
                    }
                }
            }
        },
        "CostComparison": {
            "type": "object",
            "properties": {
                "price_metadata": {
                    "$ref": "#/definitions/CostComparisonPrice"
                },
                "prices_metadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CostComparisonPrices"
                    }
                }
            }
        },
        "CostComparisonPrice": {
            "type": "object",
            "properties": {
                "lowest_cost": {
                    "type": "number",
                    "description": "Lowest cost of Cost of Care"
                },
                "highest_cost": {
                    "type": "number",
                    "description": "Highest cost of Cost of Care"
                },
                "median_cost": {
                    "type": "number",
                    "description": "Median cost of Cost of Care"
                }
            }
        },
        "CostComparisonPrices": {
            "type": "object",
            "properties": {
                "cost": {
                    "type": "number",
                    "description": "Cost of Cost of Care"
                },
                "cost_count": {
                    "type": "number",
                    "description": "Count of specific Cost of Cost of Care"
                }
            }
        },
        "PlaceOfServiceQualityData": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string",
                    "description": "Text of the Quality Data\n"
                }
            }
        },
        "Location": {
            "type": "object",
            "properties": {
                "location_id": {
                    "type": "integer",
                    "description": "Unique identifier representing a specific Location."
                },
                "location_name": {
                    "type": "string",
                    "description": "Name of Location."
                },
                "location_lat": {
                    "type": "number",
                    "description": "Latitude component of Location."
                },
                "location_lng": {
                    "type": "number",
                    "description": "Longitude component of Location."
                }
            }
        },
        "SearchMetadata": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "format": "int32"
                },
                "per_page": {
                    "type": "integer",
                    "format": "int32"
                },
                "page_count": {
                    "type": "integer",
                    "format": "int32"
                },
                "total_count": {
                    "type": "integer",
                    "format": "int32"
                },
                "next_results": {
                    "type": "string",
                    "format": "utf-8"
                }
            }
        },
        "Status": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        },
        "Success": {
            "allOf": [
                {
                    "$ref": "#/definitions/Status"
                }
            ]
        },
        "Error": {
            "allOf": [
                {
                    "$ref": "#/definitions/Status"
                }
            ]
        }
    },
    "responses": {
        "BadRequestError": {
            "description": "The request was invalid or cannot be processed.",
            "schema": {
                "$ref": "#/definitions/Error"
            }
        },
        "NotFoundError": {
            "description": "The requested page or resource cannot be found.",
            "schema": {
                "$ref": "#/definitions/Error"
            }
        },
        "GeneralError": {
            "description": "The request caused an unrecoverable error.",
            "schema": {
                "$ref": "#/definitions/Error"
            }
        }
    }
}